@mixin typo-heading-xxl {
  font-size: 7.2rem;
  font-family: $font-decay;
  font-weight: normal;
}

@mixin typo-heading-xl {
  font-size: 4rem;
  font-family: $font-decay;
  font-weight: normal;
}

@mixin typo-heading-lg {
  font-size: 3.2rem;
  font-family: $font-decay;
  font-weight: normal;
}

@mixin typo-heading-md {
  font-size: 2.8rem;
  font-family: $font-decay;
  font-weight: normal;
}

@mixin typo-heading-sm {
  font-size: 2.4rem;
  font-family: $font-decay;
  font-weight: normal;
}

@mixin typo-heading-xs {
  font-size: 2.2rem;
  font-family: $font-decay;
  font-weight: normal;
  line-height: 130%;
}

@mixin typo-heading-xxs {
  font-size: 2rem;
  font-family: $font-decay;
  font-weight: normal;
}

@mixin typo-paragraph-lg {
  font-size: 1.8rem;
  font-family: $font-inter;
  font-weight: 400;
  font-style: normal;
}

@mixin typo-paragraph-md {
  font-size: 1.6rem;
  font-family: $font-inter;
  font-weight: 400;
  font-style: normal;
}

@mixin typo-paragraph-md-semi {
  font-size: 1.6rem;
  font-family: $font-inter;
  font-weight: 500;
  font-style: normal;
}

@mixin typo-paragraph-md-bold {
  font-size: 1.6rem;
  font-family: $font-inter;
  font-weight: bold;
  font-style: normal;
}

@mixin typo-paragraph-sm {
  font-size: 1.4rem;
  font-family: $font-inter;
  font-weight: 400;
  line-height: 2.4rem;
  font-style: normal;
}

@mixin typo-label {
  font-size: 1.6rem;
  font-family: $font-inter;
  font-weight: 400;
  font-style: normal;
}

@mixin typo-guidance {
  font-size: 1.2rem;
  font-family: $font-inter;
  line-height: 1.4em;
  font-weight: 400;
  font-style: normal;

  b {
    font-weight: bold;
  }
}

@mixin typo-placeholder {
  font-size: 1.6rem;
  font-family: $font-inter;
  font-weight: 400;
  opacity: 0.5;
  font-style: normal;
  color: $color-black;
}

@mixin typo-link {
  font-size: 1.6rem;
  font-family: $font-inter;
  font-weight: bold;
  font-style: normal;
  text-decoration: underline;
}

// @include respond-above(sm) {}
@mixin respond-above($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

// @include respond-below(sm) {}
@mixin respond-below($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}
